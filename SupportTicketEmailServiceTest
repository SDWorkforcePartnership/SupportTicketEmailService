@isTest
public class SupportTicketEmailServiceTest {

    @isTest
    public static void EmailServiceTest() {
        
        // setup controller object
        SupportTicketEmailService emailServiceController = new SupportTicketEmailService();
        
        // Create a new email, envelope object and Attachment
        Messaging.InboundEmail email = new Messaging.InboundEmail();
        Messaging.InboundEnvelope envelope = new Messaging.InboundEnvelope();
        
        email.subject = 'This is the email subject and is so super unique';
        email.plainTextBody = 'Hello, this a test email body for testing purposes only.';
        
        List<String> toAddresses = new List<String>();
        toAddresses.add('salesforcesupport@workforce.org');
        email.toAddresses = toAddresses;
        
        List<String> ccAddresses = new List<String>();
        ccAddresses.add('salesforcesupport@workforce.org');
        email.ccAddresses = ccAddresses;
        
        envelope.fromAddress = 'sef@email.com';
        //envelope.toAddress = 'salesforcesupport@workforce.org';
        
        emailServiceController.handleInboundEmail(email, envelope);
        
        // Binary Attachment test
        Messaging.InboundEmail.BinaryAttachment binaryAttachment = new Messaging.InboundEmail.BinaryAttachment();
		binaryAttachment.Filename = 'test.pdf';
        binaryAttachment.body = blob.valueOf('my attachment text');
        email.binaryAttachments = new Messaging.inboundEmail.BinaryAttachment[] { binaryattachment };
        emailServiceController.handleInboundEmail(email, envelope);
        
        // Text Attachment test
        Messaging.InboundEmail.TextAttachment textAttachment = new Messaging.InboundEmail.TextAttachment();
		textAttachment.Filename = 'test.txt';
        textAttachment.body = 'my attachment text';
        email.textAttachments = new Messaging.inboundEmail.TextAttachment[] { textattachment };
        emailServiceController.handleInboundEmail(email, envelope);
        
        Messaging.InboundEmailResult result = emailServiceController.handleInboundEmail(email, envelope);
        System.debug( result );
    }
    
}
